{"version":3,"sources":["../../../source/commonjs/test/depcheck.test.cjs"],"names":[],"mappings":";;AAAA;;AACA;;AACA;;;;AAEA,MAAM,OAAO,GAAG,OAAhB;AAEA,kBAAK,UAAL,EAAiB,MAAO,IAAP,IAAgB;AAE/B,MAAI,MAAM,GAAG,MAAM,uBAAM,OAAO,CAAC,GAAR,EAAN,EAAqB;AACtC,sBAAkB,CAChB,WADgB,EAEhB,UAFgB;AADoB,GAArB,CAAnB,CAF+B,CAS/B;;AAEA,EAAA,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,YAAtB,EAAoC,EAApC;AACA,EAAA,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,eAAtB,EAAuC,CACrC,YADqC,EAErC,mBAFqC,EAGrC,mCAHqC,EAIrC,IAJqC,EAKrC,mBALqC,EAMrC,KANqC,CAAvC;AASA,EAAA,IAAI,CAAC,IAAL,CAAU,YAAG,WAAH,CAAe,MAAM,CAAC,OAAtB,CAAV;AACA,EAAA,IAAI,CAAC,IAAL,CAAU,YAAG,WAAH,CAAe,MAAM,CAAC,WAAtB,CAAV;AACA,EAAA,IAAI,CAAC,IAAL,CAAU,YAAG,WAAH,CAAe,MAAM,CAAC,YAAtB,CAAV;AAED,CAzBD","file":"depcheck.test.cjs","sourcesContent":["import Check from 'depcheck'\nimport Is from '@pwn/is'\nimport Test from 'ava'\n\nconst Process = process\n\nTest('depcheck', async (test) => {\n\n  let unused = await Check(Process.cwd(), {\n    'ignorePatterns': [\n      '/coverage',\n      '/process'\n    ]\n  })\n\n  // test.log(unused)\n\n  test.deepEqual(unused.dependencies, [])\n  test.deepEqual(unused.devDependencies, [\n    '@babel/cli',\n    '@babel/preset-env',\n    '@virtualpatterns/mablung-makefile',\n    'c8',\n    'npm-check-updates',\n    'shx'\n  ])\n\n  test.true(Is.emptyObject(unused.missing))\n  test.true(Is.emptyObject(unused.invalidDirs))\n  test.true(Is.emptyObject(unused.invalidFiles))\n\n})\n"]}