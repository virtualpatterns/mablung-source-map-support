{"version":3,"sources":["../../../source/commonjs/test/install.test.cjs"],"names":[],"mappings":";;AAAA;;AACA;;;;AAEA,kBAAK,eAAL,EAAuB,IAAD,IAAU;AAE9B,MAAI,KAAK,GAAG,IAAI,KAAJ,CAAU,OAAV,CAAZ;AAEA,MAAI,UAAU,GAAG,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAkB,IAAlB,CAAjB;AACA,MAAI,GAAG,SAAH,IAAgB,UAApB;AAEA,MAAI,OAAO,GAAG,sBAAd;AACA,MAAI,GAAG,SAAH,EAAc,eAAd,EAA+B,iBAA/B,IAAoD,SAAS,CAAC,KAAV,CAAgB,OAAhB,CAAxD;AAEA,EAAA,IAAI,CAAC,GAAL,CAAU,IAAG,cAAK,QAAL,CAAc,EAAd,EAAkB,SAAlB,CAA6B,aAAY,eAAgB,YAAW,iBAAkB,EAAnG;AAEA,MAAI,QAAQ,GAAG,UAAf;AACA,EAAA,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,UAAjB,EAA6B,QAA7B,CAAX;AAEA,EAAA,IAAI,CAAC,EAAL,CAAQ,SAAR,EAAmB,QAAnB;AAED,CAjBD","file":"install.test.cjs","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\n\nTest('Error(string)', (test) => {\n\n  let error = new Error('error')\n\n  let errorStack = error.stack.split('\\n')\n  let [, stackItem] = errorStack\n\n  let pattern = /at (.+):(\\d+):(\\d+)/i\n  let [, errorPath, errorLineNumber, errorColumnNumber] = stackItem.match(pattern)\n\n  test.log(`'${Path.relative('', errorPath)}' on line ${errorLineNumber}, column ${errorColumnNumber}`)\n\n  let filePath = __filename\n  filePath = filePath.replace(/release/i, 'source')\n\n  test.is(errorPath, filePath)\n\n})\n"]}